/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package report.ui;

import entity.Contact;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import report.ReportPaymentBill;
import ui.container.TabbedContainer;
import ui.controls.PressButton;
import ui.controls.input.SearchBox;

/**
 *
 * @author PersianDevStudio
 */
public class ReportPanelPaymentBill extends javax.swing.JPanel {

    private final ReportPaymentBill reportPaymentBill;
    private TabbedContainer tabbedContainer;

    private Contact contact;

    /**
     * Creates new form ReportPanelPaymentBill
     */
    public ReportPanelPaymentBill() {
        initComponents();

        pressButton1.setTextHorizontalPosition(PressButton.POSITION_CENTER);
        pressButton1.setTextVerticalPosition(PressButton.POSITION_CENTER);
        pressButton2.setTextHorizontalPosition(PressButton.POSITION_CENTER);
        pressButton2.setTextVerticalPosition(PressButton.POSITION_CENTER);

        SearchBox.setupSearchbox(Contact.class,
                searchBox1,
                "CALL search_contact(?)",
                (Object currentValue) -> {
                    setSelectedContact((Contact) currentValue);
                });

        reportTable.setReport((reportPaymentBill = new ReportPaymentBill()));

        int pIndex = 0;
        reportTable.setColumnPreferredWidth(pIndex++, 30);
        reportTable.setColumnPreferredWidth(pIndex++, 130);
        reportTable.setColumnPreferredWidth(pIndex++, 100);
        reportTable.setColumnPreferredWidth(pIndex++, 100);
        reportTable.setColumnPreferredWidth(pIndex++, 200);
        reportTable.setColumnPreferredWidth(pIndex++, 100);
        reportTable.setColumnPreferredWidth(pIndex++, 100);
        reportTable.setColumnPreferredWidth(pIndex++, 100);

        reportTable.apply();

        reportTable.addMouseAdapter(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent mouseEvent) {
                JTable table = (JTable) mouseEvent.getSource();
                Point point = mouseEvent.getPoint();
                int row = table.rowAtPoint(point);
                if (mouseEvent.getClickCount() == 2 && table.getSelectedRow() != -1) {
                    application.Application.instance.openInvoicePanel(
                            Long.parseLong(reportTable.getValue(row, 2).toString()));
                }
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        reportTable = new report.ui.ReportTable();
        groupPane1 = new ui.container.GroupPane();
        searchBox1 = new ui.controls.input.SearchBox();
        inputFieldNumber1 = new ui.controls.input.InputFieldNumber();
        jSeparator2 = new javax.swing.JSeparator();
        inputFieldDateEnd = new ui.controls.input.InputFieldDate();
        inputFieldDateStart = new ui.controls.input.InputFieldDate();
        jSeparator1 = new javax.swing.JSeparator();
        pressButton2 = new ui.controls.PressButton();
        pressButton1 = new ui.controls.PressButton();

        setLayout(new java.awt.BorderLayout());
        add(reportTable, java.awt.BorderLayout.CENTER);

        groupPane1.setPreferredSize(new java.awt.Dimension(532, 50));
        groupPane1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        searchBox1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "مخاطب", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        searchBox1.setPreferredSize(new java.awt.Dimension(200, 40));
        groupPane1.add(searchBox1);

        inputFieldNumber1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "شناسه مخاطب", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        inputFieldNumber1.setPreferredSize(new java.awt.Dimension(130, 39));
        inputFieldNumber1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFieldNumber1ActionPerformed(evt);
            }
        });
        groupPane1.add(inputFieldNumber1);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator2.setPreferredSize(new java.awt.Dimension(2, 40));
        groupPane1.add(jSeparator2);

        inputFieldDateEnd.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "تا تاریخ", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        inputFieldDateEnd.setPreferredSize(new java.awt.Dimension(80, 39));
        groupPane1.add(inputFieldDateEnd);

        inputFieldDateStart.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "از تاریخ", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        inputFieldDateStart.setPreferredSize(new java.awt.Dimension(80, 39));
        groupPane1.add(inputFieldDateStart);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setPreferredSize(new java.awt.Dimension(2, 40));
        groupPane1.add(jSeparator1);

        pressButton2.setText("پاک کردن");
        pressButton2.setPreferredSize(new java.awt.Dimension(63, 30));
        pressButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pressButton2ActionPerformed(evt);
            }
        });
        groupPane1.add(pressButton2);

        pressButton1.setText("گزارش");
        pressButton1.setPreferredSize(new java.awt.Dimension(63, 30));
        pressButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pressButton1ActionPerformed(evt);
            }
        });
        groupPane1.add(pressButton1);

        add(groupPane1, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    private void inputFieldNumber1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputFieldNumber1ActionPerformed
        findContactWidthId();
    }//GEN-LAST:event_inputFieldNumber1ActionPerformed

    private void pressButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pressButton2ActionPerformed
        clearInputs();
    }//GEN-LAST:event_pressButton2ActionPerformed

    private void pressButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pressButton1ActionPerformed
        apply();
    }//GEN-LAST:event_pressButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ui.container.GroupPane groupPane1;
    private ui.controls.input.InputFieldDate inputFieldDateEnd;
    private ui.controls.input.InputFieldDate inputFieldDateStart;
    private ui.controls.input.InputFieldNumber inputFieldNumber1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private ui.controls.PressButton pressButton1;
    private ui.controls.PressButton pressButton2;
    private report.ui.ReportTable reportTable;
    private ui.controls.input.SearchBox searchBox1;
    // End of variables declaration//GEN-END:variables

    public void refreshTitle(TabbedContainer tabbedContainer) {
        this.tabbedContainer = tabbedContainer;

        String title = "حساب مالی";
        if (contact != null) {
            title += (" " + contact.getName() + " " + contact.getLastname());
        }
        this.tabbedContainer.setTitleAt(this.tabbedContainer.indexOfComponent(this), title.trim());
    }

    private void setSelectedContact(Contact contact) {
        this.contact = contact;
        inputFieldNumber1.setText(this.contact == null ? "" : contact.getContactId() + "");
        refreshTitle(tabbedContainer);
    }

    private void findContactWidthId() {
        try {
            Contact contact = Contact.find(Long.parseLong(inputFieldNumber1.getText()));
            if (contact == null) {
                JOptionPane.showMessageDialog(this, "مخاطبت مورد نظر یافت نشد!", "پیام", JOptionPane.WARNING_MESSAGE);
            } else {
                setSelectedContact(contact);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ورودی نا معبر است!", "پیام", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void clearInputs() {
        setSelectedContact(null);
        inputFieldDateEnd.setText("");
        inputFieldDateStart.setText("");

    }

    private void apply() {
        reportPaymentBill.setContactId(contact == null ? 0 : contact.getContactId());
        reportPaymentBill.setStartDate(inputFieldDateStart.isValidInput() ? inputFieldDateStart.getLastValidDate() : 0);
        reportPaymentBill.setEndDate(inputFieldDateEnd.isValidInput() ? inputFieldDateEnd.getLastValidDate() : 0);

        searchBox1.setSelectedItem(null);
        reportTable.apply();
    }
}
